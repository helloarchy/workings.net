@using System.Collections
<div>
    <label>
        <span class="block">@Title</span>
        @{
            if (Type == FieldType.Select)
            {
                <InputSelect @bind-Value="@(BindProperty)" class="form-select block w-full">
                    @{
                        foreach (var option in Options)
                        {
                            <option value="@(option)">@(option)</option>
                        }
                    }
                </InputSelect>
            }
            else if (Type == FieldType.Range)
            {
                /* Not currently supported by Tailwind CSS Forms */
                <input type="@_inputType" class="block"/>
            }
            else
            {
                <input type="@_inputType" class="form-input block"/>
            }
        }
    </label>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public FieldType Type { get; set; }

    [Parameter]
    public Array Options { get; set; }
    
    [Parameter]
    public dynamic BindProperty { get; set; }

    private string _inputType = "";

    public enum FieldType
    {
        Checkbox,
        Date,
        File,
        Number,
        Radio,
        RadioGroup,
        Select,
        Text,
        TextArea,
        // Ignore
        Decimal,
        Integer,
        Range
    }

    protected override void OnInitialized()
    {
        _inputType = Type switch
        {
            FieldType.Text => "text",
            FieldType.Decimal => "number",
            FieldType.Range => "range",
            FieldType.Integer => "number",
            _ => ""
            };
    }

}