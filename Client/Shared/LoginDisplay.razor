@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MudBlazor

@inject NavigationManager _navigation
@inject SignOutSessionStateManager _signOutManager

<MudThemeProvider/>

<AuthorizeView>

    @* When signed in... *@
    <Authorized>
        <MudMenu Icon="@Icons.Rounded.AccountCircle" OffsetX="true" Direction="Direction.Left">
            <ActivatorContent>
                @* TODO: Use identity for personalisation *@
                <MudIcon Icon="@Icons.Rounded.AccountCircle"/>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Link="authentication/profile">Profile</MudMenuItem>
                <MudMenuItem OnClick="BeginSignOut">Sign Out</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>

    @* When no active user... *@
    <NotAuthorized>
        <MudMenu FullWidth="true">
            <ActivatorContent>
                <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Primary">Sign in / Register</MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Link="authentication/login">Sign in</MudMenuItem>
                <MudMenuItem Link="authentication/register">Register</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await _signOutManager.SetSignOutState();
        _navigation.NavigateTo("authentication/logout");
    }

}