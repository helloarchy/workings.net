@page "/businessclient"

@inject HttpClient _httpClient
@inject IJSRuntime _js

@if (BusinessClients == null)
{
    <text>Loading...</text>
}
else if (!BusinessClients.Any())
{
    <text>Add business clients to view them all here.</text>
}
else
{
    <MudTable Items="@BusinessClients" Dense="true" Hover="true" SortLabel="Sort By" FixedHeader="true" Bordered="true" Striped="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Business Clients</MudText>
            <MudToolBarSpacer/>
            <MudChip Icon="@Icons.Material.Rounded.Add" Color="Color.Primary" Link="businessClient/create">Create New</MudChip>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BusinessClient, object>(x => x.Id)">Id</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<BusinessClient, object>(x => x.Name)">Name</MudTableSortLabel>
            </MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd>
                <MudIconButton Link="@($"businessClient/edit/{context.Id}")" Icon="@Icons.Rounded.Edit"/>
                <MudIconButton OnClick="@(() => Delete(context.Id))" Icon="@Icons.Rounded.Delete"/>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new[] {50, 100}"/>
        </PagerContent>
    </MudTable>
}

@code {
    IEnumerable<BusinessClient> BusinessClients { get; set; } = new List<BusinessClient>();

    protected override async Task OnInitializedAsync()
    {
        BusinessClients =
            await _httpClient.GetFromJsonAsync<List<BusinessClient>>("api/businessClient");
    }

    async Task Delete(int Id)
    {
        var businessClient = BusinessClients.First(x => x.Id == Id);
        var confirmDelete = await _js.InvokeAsync<bool>(
            "confirm",
            $"Do you want to delete {businessClient.Name}'s ({businessClient.Id}) Record?"
            );

        if (confirmDelete)
        {
            await _httpClient.DeleteAsync($"api/businessClient/{Id}");
            await OnInitializedAsync();
        }
    }

}